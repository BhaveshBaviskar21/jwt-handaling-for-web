const express = require('express')
const app = express()
const mongoose = require('mongoose')
const User = require('./modules/user_modules')
const bcrypt = require('bcryptjs')
const jwt = require('jsonwebtoken')
const cors = require('cors')
const cookieParser = require("cookie-parser");


app.use(cors())
app.use(express.json())
app.use(cookieParser());


mongoose.connect("mongodb://localhost:27017/webpage")



app.post('/api/register',async (req,res)=>{
    console.log(req.body)
	try {
		const newPassword = await bcrypt.hash(req.body.password, 10)
		await User.create({
			name: req.body.name,
			email: req.body.email,
			password: newPassword,
		})
		res.json({ status: 'ok' })
	} catch (err) {
		res.json({ status: 'error', error: err })
	}
})


app.post('/api/login',async (req,res)=>{
    const user = await User.findOne({
		email: req.body.email,
	})

	if (!user) {
		return { status: 'error', error: 'Invalid login' }
	}

	const isPasswordValid = await bcrypt.compare(
		req.body.password,
		user.password
	)

	if (isPasswordValid) {
        const token = jwt.sign(
            {
                name: user.name,
                email: user.email,
                expires: Date.now() // + 300000
            }, 'secret123'
        )
        res.cookie('token', token, { httpOnly: true, secure: true });
        return res.json({status:'ok',token:token})
	} else {
		return res.json({ status: 'error', user: false })
	}
})


app.get('/api/quote', async (req, res) => {
	const token = req.cookies.token
    try {
        const decoded = jwt.verify(token, 'secret123')
		const email = decoded.email
		const user = await User.findOne({ email: email })
		return res.json({ status: 'ok', quote: token })
    }catch(error) {
		console.log(error)
		res.json({ status: 'error', error: error })
	}
})

app.post('/api/quote', async (req, res) => {

    const token = req.cookies.token

    try {
        const decoded = jwt.verify(token, 'secret123')
		const email = decoded.email
		await User.updateOne(
			{ email: email },
			{ $set: { quote: req.body.quote } }
        )
		return res.json({ status: 'ok' })
    }catch(error) {
		console.log(error)
		res.json({ status: 'error', error: error })
	}
})


app.get('/test',(req,res)=>{
    res.send("hi there")
})

app.listen(21066,()=>{
    console.log('i am here')
})